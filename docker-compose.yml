version: "3.9"

networks:
  microservices-net:
    driver: bridge
  # Rede externa
  shared-microservices-network:
    external: true
  default:
    name: traptack-network

services:

  config-repo:
    image: alpine/git
    container_name: config-repo
    command: [ "sleep", "infinity" ]
    volumes:
      - ../config-repo:/config-repo
    healthcheck:
      test: [ "CMD-SHELL", "[ -d /config-repo/.git ]" ]
      interval: 10s
      timeout: 5s
      retries: 3

  config-service:
    build:
      context: ./config-service
      dockerfile: Dockerfile
    container_name: config-service
    ports:
      - "8888:8888"
    environment:
      - APP_PORT=8888
      - JAVA_OPTS=-Xms128m -Xmx512m
      - GIT_USERNAME=${GIT_USERNAME}
      - GIT_PASSWORD=${GIT_PASS}
    networks:
      - microservices-net
      - shared-microservices-network # Conecte a rede externa
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://localhost:8888/actuator/health || exit 1" ]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 5s
=======
      SPRING_PROFILES_ACTIVE: dev
      CONFIG_REPO_URI: git@github.com:taptrack-system/config-repo.git
      # Se for SSH, monte o secret como volume
      # CONFIG_REPO_SSH_KEY: /run/secrets/config_repo_ssh_key
    volumes:
      - ./secrets/id_rsa:/root/.ssh/id_rsa:ro  # exemplo de montagem da chave privada
      - ./known_hosts:/root/.ssh/known_hosts:ro

  discovery-service:
    build:
      context: ./discovery-service
      dockerfile: Dockerfile
    container_name: discovery-service
    ports:
      - "8761:8761"
    env_file:
      - ./discovery-service/.env
    depends_on:
      config-service:
        condition: service_healthy

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    env_file:
      - ./api-gateway/.env
    depends_on:
      discovery-service:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=ZyE80aIG41
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=ZyE80aIG41
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 10s
      timeout: 10s
      retries: 5

networks:
  default:
    name: taptrack-network
