# --- Gateway Server ---
# application.yml
#
server:
  port: 8080

spring:
  application:
    name: gateway-service
  config:
    import: "configserver:http://config-service:8888" # Define a URL do Config Server diretamente aqui
  cache:
    type: caffeine
    cache-names:
      - routesCache
      - usersCache
    caffeine:
      spec: maximumSize=500,expireAfterWrite=10m,recordStats

# --- Eureka ---
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true

# --- Actuator ---
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers,httptrace,env
      base-path: /actuator
  endpoint:
    health:
      show-details: ALWAYS
  metrics:
    enable:
      all: true
  info:
    git:
      mode: full

# --- Info ---
info:
  app:
    name: ${spring.application.name}
    description: API Gateway do sistema TapTrack
    version: 0.0.1-SNAPSHOT
    maintainer: Juliane Maran
    contact: julianemaran@gmail.com
    license: Apache-2.0
    homepage: https://github.com/taptrack-system/infra-domain
  build:
    artifact: ${spring.application.name}
    version: 1.0.0
    time: ${BUILD_TIME:2025-09-27T00:00:00Z}   # opcional, pode ser gerado pelo Maven
    commit: ${GIT_COMMIT:unknown}
  environment:
    activeProfiles: ${spring.profiles.active:default}
    javaVersion: ${java.version}
    os: ${os.name}

# --- Logging ---
logging:
  level:
    root: INFO
    com.infradomain.gatewayservice: DEBUG
    org.springframework: INFO
    com.netflix.discovery: WARN       # Eureka / Discovery
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"